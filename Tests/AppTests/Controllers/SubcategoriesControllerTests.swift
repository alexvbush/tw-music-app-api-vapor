import XCTest
import Testing
import HTTP
@testable import App
@testable import Vapor

class FakeSubcategoriesStorage: SubcategoriesStorageInterface {
    var subcategories = [
        Subcategory(id: "7", categoryId: "3", name: "Rap", songIds: []),
        Subcategory(id: "8", categoryId: "3", name: "Rock", songIds: []),
        Subcategory(id: "9", categoryId: "3", name: "Pop", songIds: [])
    ]
    
    func subcategories(categoryId: String) -> [Subcategory] {
        return subcategories.filter { return $0.categoryId.equals(caseInsensitive: categoryId) }
    }
}

class SubcategoriesControllerTests: TestCase {
    
    func testThatItReturnsAListOfSubcategoriesForAGivenCategory() throws {
        // given
        let fakeSubcategoriesStorage = FakeSubcategoriesStorage()
        let controller = SubcategoriesController(fakeSubcategoriesStorage)
        let request = Request.makeTest(method: .get)
        // NOTE: this is a really stupid autogenerated name for categoryId param. Need to figure out how to substitute it with something more error prone.
        try request.parameters.set("string", "3")
        
        // when
        let response = try controller.index(request).makeResponse()
        let json = response.json
        
        // then
        let subcategoriesJSON = json?["subcategories"]
        XCTAssertNotNil(subcategoriesJSON)
        XCTAssertEqual(subcategoriesJSON?[0]?["name"], "Rap")
        XCTAssertEqual(subcategoriesJSON?[1]?["name"], "Rock")
        XCTAssertEqual(subcategoriesJSON?[2]?["name"], "Pop")
    }
}

